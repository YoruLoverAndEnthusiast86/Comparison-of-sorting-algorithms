long long c[100000001] = {0} ;
long long count[1000] = {0} ;

void countSort(long long*arr, long long n, int exp)
{
    long long i ;
     for( i = 0 ; i < 10 ; i++)
        count[i] = 0 ;
    for (i = 0; i < n; i++)
        count[(arr[i] / exp) % 10]++;
    for (i = 1; i < 10; i++)
        count[i] += count[i - 1];
    for (i = 0; i < n; i++) {
        c[count[(arr[i] / exp) % 10] - 1] = arr[i];
    count[(arr[i] / exp) % 10]--;
}
    for (i = 0; i < n; i++)
        arr[i] = c[i];
}

long long getMax(long long *arr, long long n)
{
    long long mx = arr[0];
    for (long long i = 1; i < n; i++)
        if (arr[i] > mx)
            mx = arr[i];
    return mx;
}
void RadixSort(long long *arr, long long n)
{
    long long m = getMax(arr, n);
    for (int exp = 1; m / exp > 0; exp *= 10)
        countSort(arr, n, exp);
}
